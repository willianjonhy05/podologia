# Generated by Django 5.1.3 on 2024-11-27 21:56

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Disponibilidade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dia', models.CharField(choices=[('segunda', 'Segunda-feira'), ('terca', 'Terça-feira'), ('quarta', 'Quarta-feira'), ('quinta', 'Quinta-feira'), ('sexta', 'Sexta-feira'), ('sabado', 'Sábado'), ('domingo', 'Domingo')], max_length=10, verbose_name='Dia da Semana')),
                ('horario_inicio', models.TimeField(verbose_name='Horário de Início')),
                ('horario_fim', models.TimeField(verbose_name='Horário de Fim')),
            ],
            options={
                'verbose_name': 'Disponibilidade',
                'verbose_name_plural': 'Disponibilidades',
                'ordering': ['dia', 'horario_inicio'],
            },
        ),
        migrations.CreateModel(
            name='TratamentoPodologico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome do Tratamento')),
                ('descricao', models.TextField(help_text='Breve descrição do tratamento.', verbose_name='Descrição')),
                ('duracao', models.PositiveIntegerField(help_text='Duração média do tratamento.', verbose_name='Duração (minutos)')),
                ('preco', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Preço')),
                ('tipo', models.CharField(choices=[('Preventivo', 'Preventivo'), ('Estético', 'Estético'), ('Clínico', 'Clínico'), ('Reabilitação', 'Reabilitação')], max_length=20, verbose_name='Tipo do Tratamento')),
            ],
            options={
                'verbose_name': 'Tratamento Podológico',
                'verbose_name_plural': 'Tratamentos Podológicos',
                'ordering': ['nome'],
            },
        ),
        migrations.CreateModel(
            name='ProfissionalDePodologia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, verbose_name='Nome')),
                ('especializacao', models.CharField(help_text='Especialização, como atendimento infantil, TEA/TDAH etc.', max_length=300)),
                ('foto', models.ImageField(blank=True, null=True, upload_to='avatares', verbose_name='Foto')),
                ('email', models.EmailField(help_text='E-mail de contato do profissional', max_length=254, verbose_name='E-mail')),
                ('telefone_whatsapp', models.CharField(blank=True, help_text='Telefone de contato', max_length=15, null=True, verbose_name='Telefone/WhatsApp')),
                ('rede_social', models.URLField(blank=True, help_text='Website ou página de contato do profissional', null=True, verbose_name='Link de Rede Social')),
                ('endereco', models.CharField(blank=True, help_text='Endereço', max_length=255, null=True, verbose_name='Endereço')),
                ('bairro', models.CharField(blank=True, help_text='Bairro', max_length=255, null=True, verbose_name='Bairro')),
                ('especialidade', models.TextField(help_text='Descrição da especialidade do profissional e sua experiência', verbose_name='Especialidade')),
                ('aprovado', models.BooleanField(default=False, verbose_name='Aprovado')),
                ('disponibilidade', models.ManyToManyField(related_name='profissionais', to='core.disponibilidade', verbose_name='Disponibilidades')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='profissional', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Profissional de Podologia',
                'verbose_name_plural': 'Profissionais de Podologia',
            },
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', models.DateField(default=datetime.date.today, verbose_name='Data do Agendamento')),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('confirmado', 'Confirmado'), ('concluido', 'Concluído'), ('cancelado', 'Cancelado')], default='pendente', max_length=10, verbose_name='Status do Agendamento')),
                ('profissional', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='core.profissionaldepodologia', verbose_name='Profissional')),
                ('servicos', models.ManyToManyField(related_name='agendamentos', to='core.tratamentopodologico', verbose_name='Serviços')),
            ],
            options={
                'verbose_name': 'Agendamento',
                'verbose_name_plural': 'Agendamentos',
                'ordering': ['data'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=255, verbose_name='Nome')),
                ('data_nasc', models.DateField(blank=True, null=True, verbose_name='Data de Nascimento')),
                ('foto', models.ImageField(blank=True, null=True, upload_to='avatares', verbose_name='Foto')),
                ('email', models.EmailField(max_length=254, verbose_name='E-mail')),
                ('telefone', models.CharField(blank=True, max_length=15, null=True, verbose_name='Telefone')),
                ('cpf', models.CharField(blank=True, max_length=15, null=True, verbose_name='CPF')),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='usuario', to=settings.AUTH_USER_MODEL, verbose_name='Usuário')),
            ],
            options={
                'verbose_name': 'Usuário',
                'verbose_name_plural': 'Usuários',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nota', models.PositiveSmallIntegerField(choices=[(1, '1 - Muito ruim'), (2, '2 - Ruim'), (3, '3 - Regular'), (4, '4 - Bom'), (5, '5 - Excelente')], help_text='Nota de 1 a 5 sobre o atendimento', verbose_name='Nota')),
                ('comentario', models.TextField(blank=True, help_text='Comentários adicionais sobre o atendimento', null=True, verbose_name='Comentário')),
                ('data', models.DateTimeField(auto_now_add=True, verbose_name='Data do Feedback')),
                ('agendamento', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='feedback', to='core.agendamento', verbose_name='Agendamento')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='core.usuario', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'ordering': ['-data'],
            },
        ),
        migrations.AddField(
            model_name='agendamento',
            name='usuario',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='agendamentos', to='core.usuario', verbose_name='Cliente'),
        ),
    ]
